### Push on main after PR approval. Using self hosted runner on mac laptop
### Not using local runner may require openvpn for act tenant. Right now using local runner with my PS openvpn file
### Add change_name as combinaison of branch plus last commit id. in progress
name: Deploy updates

on:
  push:
    branches:
      - main

jobs:
  deploy-prod:
    env:
      LABPASSPHRASE: ${{ secrets.LABPASSPHRASE }}
      CVP_host: '10.255.60.69'  ### REPLACE WITH CVP IP ADDRESS
      OVPN_profile: PS.ovpn  ### REPLACE WITH ACTUAL FILE FOR SPECIFIC ACT ENVIRONMENT
    timeout-minutes: 15
    runs-on: [ self-hosted, macOS, X64 ]
    # runs-on: ubuntu-latest
    steps:
      - name: Hi
        run: echo "Hello World!"

      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install zsh
        run: arch -arm64 brew install zsh

      - name: Setup Python
        # uses: actions/setup-python@v3
        run: arch -arm64 brew install python3

      # - name: Install zsh
      #   run: sudo apt install -y zsh

      # - name: Setup Python
      #   uses: actions/setup-python@v3
      #   with:
      #     python-version: '3.11.6'

      - name: Install Python requirements
        run: pip3 install -r requirements.txt

      # - name: Run pre-commit on files
      #   uses: pre-commit/action@v3.0.0
      
      - name: Run pre-commit on files
        run: |
          pip3 install pre-commit
          pre-commit install

      - name: Check paths for group_vars
        uses: dorny/paths-filter@v2
        id: filter-group_vars
        with:
          filters: |
            workflows:
              - 'inventory/MPLS_network/group_vars/**'
              - 'inventory/MPLS_network/inventory.yml'
              - '.github/workflows/**'
            
      - name: Install collections
        run: ansible-galaxy collection install -r requirements.yml
        if: steps.filter-group_vars.outputs.workflows == 'true'

# ##
# # ACT connectivity 
      # - name: Add nameserver
      #   run: echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf > /dev/null
      
      # - name: OS update
      #   run: sudo apt-get update 

      - name: Install OVPN
        run: arch -arm64 brew install openvpn
        # run: sudo apt-get --assume-yes --no-install-recommends install openvpn
        if: steps.filter-group_vars.outputs.workflows == 'true'
        
      # - name: Install resolvconf
      #   run: sudo apt-get install openvpn-systemd-resolved -y
      #   if: steps.filter-group_vars.outputs.workflows == 'true'

      - name: Connect VPN
        run: openvpn --config $OVPN_profile --daemon
        if: steps.filter-group_vars.outputs.workflows == 'true'

      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 $CVP_host; do sleep 2; done
        if: steps.filter-group_vars.outputs.workflows == 'true'

# # Build and deploy config for the fabric
      - name: Build and deploy configuration for the fabric
        run: make fabric-provision
        if: steps.filter-group_vars.outputs.workflows == 'true'